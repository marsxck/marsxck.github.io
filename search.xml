<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[HXD1列车制动系统]]></title>
    <url>%2F2019%2F05%2F06%2FHXD1%E5%88%97%E8%BD%A6%E5%88%B6%E5%8A%A8%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[组成 风源系统、制动机系统和其他气动辅助装置 两节机车组成，每节机车均有完整空气管路与制动系统 惩罚制动无人警惕作用，超速，监控施加，列车管快速排风，制动系统故障，列车管减压100kPa.]]></content>
      <categories>
        <category>HXD1型电力机车</category>
      </categories>
      <tags>
        <tag>HXD1 机车知识 笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VxWorks开发-任务调度]]></title>
    <url>%2F2019%2F05%2F05%2FVxWorks%E5%BC%80%E5%8F%91-%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[VxWorks开发-任务]]></title>
    <url>%2F2019%2F05%2F05%2FVxWorks%E5%BC%80%E5%8F%91%2F</url>
    <content type="text"><![CDATA[内核实现基本原理VxWorks内核维护三个队列：tick、Ready、active。除此之外，还有一个队列涉及任务，即资源等待队列，可以是VxWorks内核提供的，也可以是用户提供，此处为pend队列。 tick队列，调用taskDelay函数后，任务所处的队列，此时任务设置为Delay，无资格竞争CPU。 ready队列，有资格竞争使用CPU的所以任务，队列以优先级排序，队列头是除了运行的任务之外，系统中最高优先级的任务 active队列，系统中所有运行的任务 pend队列，竞争使用资源，资源不可用，进入pend队列 任务创建流程使用taskSpawn创建一个新的任务，首先创建一个任务控制结构，对其初始化后，加入active队列作为系统任务管理，最后将其加入ready队列，此时才可竞争CPU。 任务优先级VxWorks将任务分成256个优先级，0是最高优先级，优先级可以在调用taskSpawn时指定，用户也可以通过调用taskPrioritySet改变优先级，。 应用层任务推荐使用100-250之间的优先级 驱动层任务可以使用51-99之间的优先级 网络数据收发任务tNetTask的优先级为50 VxWorks栈不同于Linux，VxWorks下的任务自始至终都在使用一个栈，即使调用了内核函数，也不存在栈的切换，VxWorks栈的大小在创建时已经确定，之后不能改变，对于一个很多调用的函数，应该在创建时指定一个较大的任务栈。 任务上下文任务在设计中有一个数据结构包含一个任务运行所需要的所有信息，这些信息称为上下文。 平台CPU内部所有寄存器值 任务运行时暂时存放函数变量以及函数调用时被传递参数的栈 各种定时信息 信号处理函数 其他辅助信息，任务运行总时间，任务最终返回值 VxWorks系统时钟每当时钟前进一个滴答(Tick),操作系统会响应一次中断，该中断为任务调度和定时器的触发点。 任务操作函数使能RR调度接口，整体上仍然是优先级调度，在高有限级存在多个任务运行时，RR调度才有效。12345STATUS kernelTimeSlice&#123; int ticks&#125;//循环调度方式，0则禁用，循环时间为ticks*tick S 在启动RR调度后，可以以参数0再次调用来禁用。 12345STATUS taskPrioritySet&#123; int tid, //任务id，taskSpawn的返回值， int newPriority //新设定的优先级&#125; 一个任务在运行过程中需要自己改变自己的优先级，将tid设置为0即可。 12STATUS taskLock(void)STATUS taskUnLock(void) taskLock关闭任务调度，taskUnLock开启任务调度，主要保证一段代码的原子性。 taskLock不禁止中断，不能在中断上下文保证互斥。 当taskLock因为资源进入阻塞状态，任务调度机制重新工作，直到该任务恢复运行。 12345678910111213int taskSpawn&#123; char* name, /*可以为NULL,采用默认任务名，‘tN’,N从1开始*/ int priority, /*任务优先级*/ int options, /*任务选项，控制任务的某些行为一般为0*/ int stackSize, /*任务栈的大小，此后不可更改*/ FUNCPTR entryPT， /*任务执行入口函数地址，函数名*/ int arg1, ... ... ... int arg10 /*入口函数参数，最多10个，多于10个，可以使用指针*/&#125; 函数返回任务ID,可以通过ID获得TCB(task control block)地址12WIND_TCB* tPcb;tPcb = taskTcb(0); //参数0将返回当前任务的TCB结构地址 使用taskSpawn创建一个任务，马上进入运行状态，有时候需要创建一个任务后进入挂起状态，可以使用taskCreate,函数参数与taskSpawn一样，但是需要调用taskActivate进行激活。1234STATUS taskActivate&#123; int tid&#125; 任务栈 VxWorks调度的基本单元是任务，也就是程序的实例 参数存放在栈中，传递参数的机制多用栈 VxWorks的任务栈既被应用函数使用，也被内核函数使用 任务栈的大小在创建时就决定了，一般先申请一个很大的栈，然后用试验法调用checkStack确定实际栈1234void checkStack&#123; int taskNameOrId&#125; 任务名VxWork支持任意长度任务名，并不要求任务名的全局唯一性，任务名控制在11B以内12345STATUS taskShow&#123; int tid, int level /*0显示大概信息，1显示详细信息，2显示所有任务信息*/&#125; 结束任务1234STATUS taskDelete&#123; int tid //为0结束自己&#125; 当删除一个占用资源没有释放的任务时，可能会导致崩溃。12STATUS taskSafe(void)STATUS taskUnSafe(void) 在一个任务调用了taskSafe以后，在taskUnSafe之前，其他任何任务不能对其进行删除操作。123STATUS taskSuspend(int tid) /*挂起任务*/STATUS taskResume(int tid) /*恢复任务*/STATUS taskDelay(int ticks) /*将正在运行的任务转为睡眠态，使用NO_WAIT作为参数时，VxWorks将当前任务置于ready队列所有相同优先级的任务之后*/ 钩子函数–实现底功耗可以使用一个最低优先级的后台任务加上一个任务调度钩子函数实现平台低功耗。当最低优先级后台任务被执行，触发钩子函数，使平台进入低功耗状态。 任务创建钩子函数 123456789101112STATUS taskCreateHookAdd&#123; FUNCPTR createHook /*当一个新任务被创建时调用的钩子函数*/&#125;void createHook&#123; WIND_TCB *pNewTcb /*创建钩子函数形式，将会获取新创建的任务的TCB*/&#125;void taskCreateHookDelete&#123; FUNCPTR createHook /*注销通过taskCreateHookAdd注册的钩子*/ &#125; 任务调度钩子函数 12345678910111213STATUS taskSwitchHookAdd&#123; FUNCPTR switchHook /*注册发生任务调度时调用的钩子函数*/&#125;void switchHook /*函数原型*/&#123; WIND_TCB *pOldTcb, /*被调度出去的任务TCB*/ WIND_TCB *pNewTcb /*抢占了CPU的任务TCB*/&#125;STATUS taskSwitchHookDelete&#123; FUNCPTR switchHook /*注销*/&#125; 任务删除钩子函数 123456789101112STATUS taskDeleteHookAdd&#123; FUNCPTR deleteHook /*注册在任务消亡时被调用的钩子函数*/&#125;void deleteHook&#123; WIND_TCB *pTcb /*函数原型*/&#125;STATUS taskDeleteHookDelete&#123; FUNCPTR deleteHook /*注销*/&#125; 钩子函数查询 123void taskCreateHookShow(void) /*显示当前注册到系统的所有在任务被创建时被调用的钩子函数列表*/void taskDeleteHookShow(void) /*显示当前注册到系统的所有在任务被删除时被调用的钩子函数列表*/void taskSwitchHookShow(void) /*显示当前注册到系统的所有在任务被调度时被调用的钩子函数列表*/]]></content>
      <categories>
        <category>VxWorks设备驱动开发详解</category>
      </categories>
      <tags>
        <tag>Vxworks work 笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C语言编码规范]]></title>
    <url>%2F2019%2F04%2F29%2FC%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%2F</url>
    <content type="text"><![CDATA[驼型每个单词的首字母大写其余小写，之间无分隔符。 扇入数函数被调用的上级函数的数目。 扇出数一个函数直接调用其他函数的数目。 头部文件说明12345678910/******************************************************File Name : xx.c*Copyright : Zhuzhou CSR Times Electric Co.,Ltd. All Rights Reserved.*Create Date : 2019/4/29*Description : ....................**REV1.0.0 Xiong 2019/11/28 File Create*REV1.0.1 LLLL 2019/02/11 Fixed bulk-IN read and poll*******************************************************/ 函数头部说明1234567/***********************************************************Name : UsbSendCR*Function : *Para : INT32 arg1, description* INT32 arg2, description*REV1.0.0 xiong 2019/4/29 create*REV1.0.1 xxxx 2019/4/29 Modify packet format]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>编码规范 嵌入式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C#从入门到放弃4]]></title>
    <url>%2F2019%2F04%2F25%2FC%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%834%2F</url>
    <content type="text"><![CDATA[C#中的枚举123enum Season &#123; Spring, Summer, Fall, Winter&#125;; //声明枚举Season colorful = Season.fall;Console.WriteLine(Colorful); //可自动匹配 一般情况下枚举第一个元素对应0，也可显示指定1enum Season : short &#123; Spring, Summer, Fall, Winter&#125; 枚举的数据类型可以基于8种整数类型 C#中的结构1234struct Time&#123;&#125; 结构主要实现“值”的概念，对于简单的数据使用结构可以节省开销。 C#中结构和类 不能为结构声明无参构造，编译器会自动生成一个，为所有字段赋值； 在非默认构造中，必须初始化所有字段； 结构中不能声明一个字段时同时进行初始化。123456//声明一个结构体struct time&#123; &#125;time t; //C#中不需typedef 构造器初始化1234Time now = new Time(); //调用构造Time now; //不调用//虽然是new出来的，然而依然是值类型，数据在栈上。 Console.WriteLine()自动调用ToString方法结构复制12Time now = new Time(12, 30);Time copy = now; 前提是右侧的结构字段都初始化了。 C#数组12345678int[] pins;pins = new int[4];pins = new int[4]&#123;9, 3, 2, 1&#125;;//大括号力的数值的数量必须和创建的数组实例的大小完全匹配pins = new int[4]&#123;random%10，random%10，random%10，random%10&#125;; //可以是运行时计算的值int[] pins = &#123;9, 3, 7, 2&#125;lTime[] s = &#123;new Time(12, 30), new Time(5, 30)&#125;;var names = new[]&#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;&#125;;//隐式推断var name = new[]&#123;new &#123;Name = &quot;John&quot;, Age = 44&#125;&#125;; //数组元素都是匿名类型。 数组的大小不是声明的一部分，数组是引用类型。在声明一个引用类型的时候，不会马上为对象分配内存，只有在用new关键字创建实例的时候，才会真正分配，所以在声明一个数组变量的时候不需要声明它的大小，只有在实际创建数组的时候才可以指定数组的大小。 foreach语句12345int[] pins = &#123;9, 3, 7, 2&#125;;foreach(int pin in pins)&#123; Console.WriteLine(pin);&#125; foreach语句声明了一个循环变量，自动获取数组中每个元素的值，变量类型必须与数组元素类型相匹配。 复制数组数组是引用类型，这意味着在复制了一个数组变量得到对同一个数组的两个引用，真实的复制数组需要一个一个赋值。12345678910111213141516//for一个一个赋值int[] pins = &#123;9, 3, 7, 2&#125;;int[] copy = new int[pins.Length];for(int i = 0;i&lt;copy.Length;i++)&#123; copy[i] = pins[i];&#125;//CopyTO方法赋值pins.CoptTo(copy, 0);//Copy方法复制Array.Copy(pins, copy, copy.Length);//Clone方法复制int[] copy = (int[])pins.Clone(); 以上都为浅拷贝 多维数组1234int[,] items = new int[4, 6];//声明数组，4行6列item[2, 4] = 99;item[2, 4] = item[3, 4];item[2, 4]++; 集合类 ArrayList//类似链表 12345678910ArrayList number = new ArrayList();number.Add(1); //添加元素number.Insert(number.Count-1, 99); //在索引Count-1处插入元素number.Remove(7)； //移除值为7的第一个元素number.RemoveAt(6); //移除索引为6的元素，即第7个元素//使用foreach便利当前的11个元素foreach(int number in numbers)&#123; Console.WriteLine(number);&#125; Quene 12345678910Quene numbers = new Quene();numbers.Enquene(1); //加入队列//遍历队列foreach(int number in numbers)&#123;&#125;//出队队列number.Dequeue(); Stack集合类 1234567Stack number = new Stack();numbers.Push(1); //入栈numbers.Pop(); //出栈foreach(int number in number)&#123; Console.WriteLine(number);&#125; Hashtable类 1234567891011Hashtable ages = new Hashtable();//填充1ages[&quot;asa&quot;] = 44;//遍历，返回的是DictionaryEntry，它允许通过Key属性和Value属性进行元素访问foreach(DictionaryEntry element in ages)&#123; string name = (string)element.Key; int age = (int)element.Value; Console.WriteLine(&quot;Name: &#123;0&#125;, Age: &#123;1&#125;&quot;, name, age);-&#125;]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>C# 编程语言 笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C#从入门到放弃3]]></title>
    <url>%2F2019%2F04%2F25%2FC%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%833%2F</url>
    <content type="text"><![CDATA[C#中的异常处理123456789101112try&#123; &#125;catch(Exception e) //Exception是所有异常的基类，即可以捕捉一切异常。&#123;&#125;catch()&#123;&#125; 如果一个try抛出异常，但是没有对应的catch处理程序，那么这个方法将立即退出，并返回它的调用方法，如果它的调用方法没有使用try，或者没有找到匹配的catch，那个调用也会退出，返回更上一层。由内向外遍历了所有调用方法之后，假如找不到一个相匹配的catch处理程序，整个程序会终止。一个异常发生之后，将运行第一个匹配的异常处理程序。 checked和unchecked整数运算默认情况下C#允许计算悄悄溢出，如果需要，可以启用溢出检查。123456//在checked关键字开头的下面代码块中，任何整数运算溢出，都会抛出一个OverflowException，只会检查代码块中的溢出，如果块中出现方法调用，不会对调用的方法进行检查。checked&#123; int willThow = number++; Console.WriteLine(&quot;sss&quot;); &#125; unchecked相反，在unchecked块中的语句永远不检查。 finally块12345678try&#123;&#125;finally&#123;&#125; finally块中的语句一定会执行，一般用于释放资源。 C#的类成员访问权限默认是私有的 C#中public或者private关键字后不加冒号，每个字段和方法声明必须重复输入public或private关键字 C#小技巧1234567891011121314151617181920212223namespace Classes&#123; class Program &#123; static void DoWork() &#123; // to do Point origin = new Point(); &#125; static void Main(string[] args) &#123; try &#123; DoWork(); &#125; catch (Exception ex) &#123; Console.WriteLine(ex.Message); &#125; &#125; &#125;&#125; 可以把任务封装至静态方法dowork，即可捕捉所有异常。 C#中访问静态方法使用“类名.”进行调用，静态方法是共享的，又称工具方法，一个静态类中只能存在静态成员。 匿名类1var anonymousObject = new(Name = &quot;123&quot;, Age = 44); 这个类包含两个Public字段，分别为Name和Age，编译器会根据数据类型进行推断。定义一个匿名类，编译器会为这个类生成一个自己才知道的名称。匿名类只能包含public字段，字段必须全部初始化，而且不能在其中指定方法。 C#中的值类型和引用类型值类型分配内存，引用类型分配地址指向内存，默认传参对象是引用(地址)。 C#中的可空类型对于值类型，利用C#定义的一个修饰符，将一个变量声明为可空类型。12345int? i = null; //声明一个可空类型int j = 99;int i = 1; int i = j; //可以将具有恰当形式的表达式赋值给可空类型j = i; //不可以将一个可空的值赋值给一个普通的值 ref和out如果一个参数附加了ref关键字前缀，该参数就会成为实参别名，而不是副本。实参也必须附加ref，使用ref前必须对参数进行初始化。123456789static void Inc(ref int param)&#123; param++;&#125;static void Main()&#123; int arg = 42; Inc(ref arg);&#125; out关键字与ref类似，向参数的任何操作也会同时应用于实参，out是对output的简称，在传递一个out参数后，必须在方法内部对其赋值。 C#中的装箱object类是所有类型的基类12int i = 2;object o = i; 对于C#来说，一个应用类型都必须引用堆上的数据，在上代码第二行，引用了栈上的i，其实是引用了i在堆上的副本，这种操作为装箱。 C#中的拆箱12object o = 42;int i = (int)o; 一个值类型转化为obj类型，那么需要进行强制类型转化，将自动检查obj中的实际类型，不符合会抛出异常。 is操作符可以用is操作符验证对象类型：12345object o = 42;if(o is int)&#123; int i = (int)o;&#125; 为了代码的健壮性，在强制类型转换之前可以先判断是否是所需要的类型。 as操作符123456object o = 42;int i = o as int; //尝试类型转换，如果不成功则为nullif(i != null)&#123;&#125; C#中的指针指针的管理很容易出问题，C#通过引用来解决，如果要使用指针，必须将代码标记为unsafe(不安全)1234unsafe&#123;&#125;]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>C# 编程语言 笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[高速铁路列车运行控制技术-1]]></title>
    <url>%2F2019%2F04%2F25%2F%E9%AB%98%E9%80%9F%E9%93%81%E8%B7%AF%E5%88%97%E8%BD%A6%E8%BF%90%E8%A1%8C%E6%8E%A7%E5%88%B6%E6%8A%80%E6%9C%AF%2F</url>
    <content type="text"><![CDATA[列控系统对列车运行全部作业过程或部分作业过程实现自动控制的系统，可以根据列车在线路上运行的客观条件和实际情况，对列车的运行速度及制动方式等状态进行监督、控制和调整。 系统特征列车通过获取地面信息和命令，建立控车曲线，控制列车运行，并调整与前行列车之间必须保持的距离。 列控系统组成一般包括地面设备、车载设备、数据传输网络、车地信息传输设备。 地面设备提供线路信息、目标距离和进路状态等基本控制信息。 车载设备生成目标距离-连续速度控制模式曲线并实现对列车运行的监控。 数据传输网络实现地面设备间的数据信息交互。 车地信息传输设备用于完成地面设备和车载设备的信息交互。 列控系统的基本目标保障行车安全、保证运输效率及保证乘客舒适度。 列控系统的基本功能 线路空闲检测 危及行车安全因素的检测 速度控制和间隔控制 闭塞制式 固定闭塞列车运行的空间间隔是固定的若干个闭塞区间，闭塞区间的长度按划分的速度等级而定，列车追踪目标点为前行列车所在闭塞分区的始端，后行列车从最高速度开始制动的计算点为要求开始减速的闭塞区间的始端。 准移动闭塞列车从最高速度开始制动的计算点是根据目标距离、目标速度及列车本身的性能计算决定的。 虚拟闭塞检查设备和轨旁信号机为虚拟的。 移动闭塞目标点是前行列车的尾部，后行列车制动点根据目标距离计算决定的。]]></content>
      <categories>
        <category>高速铁路列车运行控制技术</category>
      </categories>
      <tags>
        <tag>笔记 列车控制</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深入浅出WPF1]]></title>
    <url>%2F2019%2F04%2F24%2F%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAWPF1%2F</url>
    <content type="text"><![CDATA[目录结构 Properties：程序要用到的一些资源和配置信息。 Reference：标记了当前项目需要引用哪些其他项目。 App.xaml：程序主体。 Window1.xaml：程序主窗体。 XAMLXAML由XML派生而来，所以很多XML中的概念在XAML中通用。 xmlnsxmlns—-XML-Namespace定义命名空间。123456789101112&lt;Window x:Class=&quot;深入浅出WPF.MainWindow&quot; //使用命名空间x中的class xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; //默认命名空间，UI相关程序集 xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; //映射前缀为x,的命名空间，语言解析处理相关程序集 xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; xmlns:local=&quot;clr-namespace:深入浅出WPF&quot; mc:Ignorable=&quot;d&quot; Title=&quot;MainWindow&quot; Height=&quot;450&quot; Width=&quot;800&quot;&gt; &lt;Grid&gt; &lt;/Grid&gt;&lt;/Window&gt; C#中的partial关键字这个关键字可以把一个类分拆到多处定义，这样在XAML中解析生成的类就可以和C#中的部分合二为一了。partial机制可以把类的逻辑代码留在.cs中，使用C#实现，把UI分离除去。 WPF的树形结构WPF的框架是树状的，以为节点，一层一层向下包含。这种树形结构对整个WPF都有非常重要的意义。 XAML对象和属性12345678910111213&lt;Window x:Class=&quot;深入浅出WPF.MainWindow&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; xmlns:local=&quot;clr-namespace:深入浅出WPF&quot; mc:Ignorable=&quot;d&quot; Title=&quot;MainWindow&quot; Height=&quot;450&quot; Width=&quot;800&quot;&gt; &lt;Grid&gt; &lt;Rectangle x:Name=&quot;rectangle&quot; Width=&quot;200&quot; Height=&quot;120&quot; Fill=&quot;Blue&quot;/&gt; //声明一个Rctangle对象，并设置属性 &lt;/Grid&gt;&lt;/Window&gt; x命名空间x:class这个Attribute的作用是告诉XAML编译器将XAML标签的编译结果与后台代码指定的类合并。 x:ClassModifier类具有怎样的访问控制级别。 x:Name为这个控件对象创建引用变量，并将对象的Name属性也设置为x:Name的值。 x:FieldModifier修改引用变量访问级别 x:Key通过Key检索资源，可以把重复利用资源 x:Shared通过x:Key检索资源，如果x:Shared为true则检索的是同一对象，为false则为副本。默认为true。]]></content>
      <categories>
        <category>编程框架</category>
      </categories>
      <tags>
        <tag>work 界面设计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HXD2型电力机车1]]></title>
    <url>%2F2019%2F04%2F24%2FHXD2%E5%9E%8B%E7%94%B5%E5%8A%9B%E6%9C%BA%E8%BD%A61%2F</url>
    <content type="text"><![CDATA[意义我国能源大部分依靠煤炭，随着经济发展加快，全国煤电油运全面紧张，大幅提高运输能力迫在眉睫，经过论证列车重量提高到2万t，可大幅提高运输能力。 在上述情况下，中国北车集团大同电力机车专门针对重载运输需要研制生产出了最高试验速度132km/h、最高运行速度120km/h、总功率为10MW的HXD2型大功率交流传动货运电力机车。 2006年和谐型大功率交流传动机车诞生及批量投入使用，标志我国铁路机车行业实现了由直流传动向交流传动的转化，机车技术达到世界先进水平。 优势采用大功率交-直-交传动方式，牵引电机为交流异步电机；牵引变流器采用IGBT器件；采用先进的车载计算机网络控制系统；重载车体、转向架、车钩与缓冲器、轮轴驱动系统以及计算机控制的制动系统充分满足牵引重载列车的需要；司机室按照人体工程学理论设计；轮轨关系、车网关系、车载通讯信号等系统技术与我国铁路基础设施具有良好的匹配性；电力机车的功率因数大于0.98，谐波含量大幅降低；电力机车传动效率大于0.85，同时采用制动能量反馈电网的再生制动方式，节能效果显著； 型号株洲电力机车：HXD1和HXD1b大同电力机车：HXD2和HXD2b大连机车车辆和北京二七轨交交通装备：HXD3大连机车车辆和：HXD3b和HXN3内燃戚墅堰机车：HXN5 功率 HXD1和HXD2为轴功率1200千瓦的八轴电力机车 HXD3为轴功率1200千瓦的六轴电力机车 HXD1b，2B，3B为1600千瓦的六轴电力机车 HXN3和HXN5都是6000马力等级的内燃机车 HXD2型电力机车概述针对铁路重载运输而设计。适用于国内大部分线路情况，完全满足国内铁路气候，和煤尘污染严重的环境要求。机车材料在-40低温条件下仍有良好韧性。 机车采用交-直-交电传动系统、25kV/50Hz的电压制式，可实现单机牵引1万t重载列车，通过远程重联可实现双机牵引2万t重载组合列车的运行模式。 机车主要子系统 由受电工、真空主断路器、避雷器、高压隔离开关、高压电压互感器、高压电流互感器、主变压器、IGBT四象限整流逆变装置、交流异步电机等组成的主电路系统。 由辅助变流装置、充电器、辅助电机等构成的辅助电路系统。 基于WorldFIP网络通信技术的微机网络控制控制系统。 Eurotrol电空制动系统。 贯穿在各子系统内的独立通风冷却系统。 由机车运行监控装置、信号设备、Locotrol远程重联控制装置和可控列尾装置、无线电台等组成的列车安全运行控制和检测设备。 高强度车体及附属装置。 高黏着、低动力作用转向架。 机车独立生活间、工具柜、压车铁等附属装置。 在机车的标准配置中，机车整备重量为184t，对应轴重23t，加上压车铁达到25t，机车整备重量为200t。 HXD2采用2(B0-B0)轴式(即两台机车，每台两个转向架，转向架为2轴，单独驱动) 主要技术参数参考P9 牵引性能参考P11 微机网络控制系统微机网络控制系统以一节机车为一个单元，包括2组主处理单元MPU1和MPU2，2组远程输入输出模块RIOM1和RIOM2，4组牵引控制单元TCU1~TCU4，两组辅助控制单元ACU1和ACU2，两组司机显示单元DDU1和DDU2，1组制动控制单元BCU组成。 WorldFIP网络通信的原理和结构分级FIP车辆网(FIPV)车辆级通信使用该网络，主要有主处理单元MPU、远程输入输出模块RIOMcar、牵引控制单元TCU、辅助控制单元ACU、制动控制单元BCU、司机显示单元DDU。每节列车的FIPV采用两路介质冗余设置，以保证网络通信的正常。 FIPV网的主要特点 每节机车都拥有一个带冗余介质的FIPV网，HXD2有两节机车，有两套相互独立的FIPV网。 FIPV网是一个静态地址网，需要人为设置地址进行通信。 FIPV网是一个冗余功能的网络，使用双线介质冗余方案。 FIPV网最多允许接入的节点是32个。 FIPV网和一套主控一套从控装置一起工作，主控设备具有总线仲裁功能(BA)，FIPV采用双总线仲裁器冗余方式。 总线仲裁器功能由MPU管理(主MPU负责计算机冗余管理)。 FIPV网采用变压器隔离。 FIPV网的传输速度为铁路机车车辆的专用速率1Mbit/s。 FIPV采用曼彻斯特编码。 FIPV网络使用一个16位的多项式CRC校验。 FIPV网的交换周期为40ms。 FIPV网的总线电阻120欧。 FIPV网的主控设备为MPU1或MPU2。 FIPV网的网络终端放置有终端电阻，可以使网络终端匹配电缆的阻抗特性、固定导线的电势和消除对线路的影响。 可以使用反射仪来检验机车FIPV网络的质量。 FIPV网的信息类型FIPV网的接入只有总线仲裁器管理。交换信息包括周期性变量和非周期信息。 对于周期性数据，其大小在1~128字节之间，数据在预定的时间传送到网络，以安排数据交换。 对于非周期性数据，在周期性数据交换的网络空闲时间内转送，数据大小不超过256字节，通过点到点识别。 FIPV网的传输介质有冗余设计： 对于生产者，所有数据按两种介质系统发送。 对于消费者，考虑第一个到达的数据。 有重传机制，失效后将被重制为安全值。 数据的传输有效性除了CRC校验，还有数据状态。 敏感机制：检测数据是否超时，通知消费者数据以及很久没更新了，此时消费者使用安全值。 刷新机制：生产者的数据发送到FIPV网络前可以由应用软件更新。 FIPV网络地址P185]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>HXD2 电力机车</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C#从入门到放弃2]]></title>
    <url>%2F2019%2F04%2F23%2FC%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%832%2F</url>
    <content type="text"><![CDATA[C#变量赋值12float variable;variable = 0.42F; 如果忘记添加F后缀，那么0.42被视为一个double，在C#中不通过其他方式不能将一种类型变量赋值给另外一种。 控件相关textbox内值为字符串 在C#中可以用’+’拼接字符串12//拼接43和1，得到431Console.WriteLine(&quot;43&quot;+&quot;1&quot;); C#中5.0/0.0为infinity.0.0/0.0为NANC#中可以对float和double取模，7.0%2.4=2.2C#通过视图-&gt;其他窗口-&gt;文档大纲可以看到窗体上所有控件的名称和类型，为控件选择提高了效率。数值转换12int num = int.Parse(str); //将字符串解析为int数据num.ToString(); //将数字解析成字符串 C#类型推断12var num = 99;var num = &quot;hello&quot;; 只有初始化变量时才能使用关键字var C#不支持全局方法，所有方法必须在一个类的内部C#折叠代码1234#region &quot;名称&quot;... ...... ...#endregion C#支持命名参数12void optMethod(int arg1, double arg2);optMethof(arg2:43.2,arg1:1);]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>C# 入门</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列车牵引计算习题-第4章]]></title>
    <url>%2F2019%2F04%2F23%2F%E5%88%97%E8%BD%A6%E7%89%B5%E5%BC%95%E8%AE%A1%E7%AE%97%E4%B9%A0%E9%A2%98-%E7%AC%AC4%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[在列车三种不同的工况下，作用于列车的合力包括哪些力？ 牵引工况：列车牵引力、列车运行阻力(基本阻力和坡道附加阻力) 惰性工况：列车运行阻力 制动工况：列车牵引力、列车运行阻力、列车制动力 列车运动状态取决于什么？列车所受到的合力 合力计算表各栏的意义是什么？它的计算公式和值如何确定？第一栏是列车的运行速度，一般间隔10，需要添加一些特殊速度点。第二栏为列车的最大牵引力，可以查表1-7得到第三栏是乘以了牵引力使用系数的实际使用的最大牵引力，系数为0.9第四栏是列车运行单位基本阻力，参考公式P45，由速度得出第五栏是货车运行单位基本阻力，参考公式P47第六栏是列车运行总阻力第七栏是列车牵引工况下受的总合力第八栏是列车牵引工况下受的单位合力第九栏是列车惰性工况下受的单位基本阻力第十栏是换算摩擦系数，参考P68第十一栏是列车的单位制动力，参考P73和P77第十二栏常用制动列车单位合力第十三栏点阻制动力第十四栏单位电阻制动力第十五栏电阻制动单位合力 合力曲线为什么要用阶梯线代替？为了计算方便，在解算列车运行问题通常用分段累计的近似算法。将列车运行划分为若干间隔，如果每个间隔取得不大，则在每个速度间隔，作用在列车上的合力就可以近似看成一个常数，即每个速度间隔内平均速度对应的合力、加速度可视为不变。 一个合力曲线如何应用于不同的坡度？按加算坡度千分数移动合力坐标零点，上坡向上移动ij，下坡向下移动ij。 使用高磷、中磷和低摩合成闸瓦，考虑不同制动初速度对制动单位合力的影响时，合力坐标原点移动量如何计算？参考P102 什么是均衡速度？其值如何确定？作用于列车上的合力为0的速度称为均衡速度，任何工况的合力曲线于某一坡道的速度轴的交点即为列车在该坡道上该工况的均衡速度。 列车运动方程式如何导出？参考P103 不同单位的列车运动方程式是什么？其含义是什么？ 当已知速度间隔及其平均合力时，列车运行实际、距离的计算公式按什么条件得出？在某速度间隔内的合力值如何确定？参考P105按匀变速运动得出。合力按速度间隔的平均速度v从合力曲线上取得。]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>习题 列车牵引计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列车牵引计算4]]></title>
    <url>%2F2019%2F04%2F23%2F%E5%88%97%E8%BD%A6%E7%89%B5%E5%BC%95%E8%AE%A1%E7%AE%974%2F</url>
    <content type="text"><![CDATA[列车合力牵引力Fy、阻力W和制动力B的代数和，以C表示。 C=Fy-W-B通常使用单位合力进行计算：c=((Fy-W-B)X103)/((P+G)xg)=fy-w-b式中：fy—-列车单位牵引力，N/kNw—-列车运行单位阻力，N/kNb—-列车单位制动力，N/kN 列车动态分析 牵引工况：c=fy-w0-ij 惰性工况：c=-w=-w0-ij 动力制动：c=-w-&lambda;dbd=-(w0+&lambda;dbd+ij) 空气紧急制动：c=-w-b=-(w0+b+ij) 空气常用制动：c=-w-&beta;cb=-(w0+&beta;cb+ij) 空气制动加空气常用制动：c=-w-&lambda;dbd-&beta;cb=-(w0+&lambda;dbd+&beta;cb+ij) 合力曲线图绘制过程见P99，填写合力表后进行绘图对于平直坡道，列车的合力为曲线图原坐标。对于加算坡道，在坡度千分数为ij的坡度上运行，上坡时，合力坐标零点向上移动ij个单位，下坡时，合力坐标零点向下移动|ij|。制动初速度对制动单位合力的修正参考P101 列车运动方程式依据牛顿第二定律： F=ma可以得到列车的加速度与列车的合力成正比，与列车的质量成反比： a=Cx1000/M上式M为列车全部质量，在计算中列车的一部分质量为平移和回转的复合运动，取总质量为： M+0.06M=1.06x1000x(P+G)=1060&lt;P+G&gt;所以：a=g/1060xc 列车运动方程式的应用列车在合力的作用下非匀变速运动，为了简化计算，在求解列车运行问题通常采用分段累计的近似方法。将列车速度划分为若干间隔，如果每个间隔不大，将作用在列车上的合力近似看成一个常数，按匀变速运动计算。《牵规》规定，为了保证计算精度，计算速度间隔不超过10km/h。]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>work 列车牵引计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列车牵引计算习题-第三章]]></title>
    <url>%2F2019%2F04%2F22%2F%E5%88%97%E8%BD%A6%E7%89%B5%E5%BC%95%E8%AE%A1%E7%AE%97%E4%B9%A0%E9%A2%98-%E7%AC%AC%E4%B8%89%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[产生制动力的方法有哪几种？ 摩擦制动 动力制动 闸瓦的制动力是怎样形成的？在司机的操作下，闸瓦以大小为K(kN)的压力作用于滚动的车轮踏面，产生制动力： 闸瓦摩擦系数取决于哪些因素？ 闸瓦材质和制造工艺 闸瓦压力 列车运行速度 列车制动初速度 改善闸瓦性能可能采取哪些措施？ 提高铸铁闸瓦中的含磷量 采用双侧制动或复式闸瓦 采用合成闸瓦 机车车辆的实算闸瓦压力如何计算？ 什么是制动率？闸瓦压力和重力之比，每kN重力上所具有的闸瓦压力。 不同的制动率有什么不同之处？ 轴制动率：设计中检验有无滑行的重要数据 车辆制动率：空车制动能力大，重车制动不足。 列车制动率：表示列车所具有的制动能力。 空重调整装置有什么作用？空车制动能力大，重车制动不足。因此现代货车上有空重车调整装置，可根据需要来调节空重车的制动率。 什么是实算法？写出计算公式。实算法需要计算每型车辆的闸瓦压力和摩擦系数。 换算法的换算原则是什么？换算法的实质是什么？为了简化计算，在计算时采用换算摩擦系数、换算闸瓦压力等换算值。 什么是列车换算制动率和常用制动系数？列车换算制动率如何取值？ 列车换算制动率是列车换算闸瓦压力和列车重力的比值。 常用制动系数，紧急制动取全值，列车进站制动取0.5，计算固定信号距离取0.8。 列车换算制动率取值参考P77 什么是列车制动力的二次换算法？其原则和方法是什么？ 为了解决多种摩擦材料并存时列车制动力的计算，采用列车制动力的二次换算法。 根据制动力等效原则，给出换算系数，将不同材料的换算制动率进行统一。 电阻制动特性曲线由哪些曲线组成？ 恒电流电阻制动特性曲线。 恒励磁电阻制动特性曲线。 电阻制动特性曲线收到哪些条件的限制？ 最大励磁电流限制 粘着限制 最大制动电流限制 牵引电机安全整流限制 机车最大运行速度 电阻制动的最大制动力按什么条件得到？最大励磁电流和最大制动电流的交点。]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>习题 work 列车牵引计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列车牵引计算3续]]></title>
    <url>%2F2019%2F04%2F22%2F%E5%88%97%E8%BD%A6%E7%89%B5%E5%BC%95%E8%AE%A1%E7%AE%973%E7%BB%AD%2F</url>
    <content type="text"><![CDATA[换算闸瓦压力因为机车的实际闸瓦压力不等于换算摩擦系数中所取的固定值，所以为了使换算摩擦系数&phi;b代替实际摩擦系数，必须有： 可以参考P72页例题换算 列车制动力计算的换算法列车换算制动力为列车总闸瓦压力与列车重力之比： 列车制动力计算的换算法如果列车的闸瓦类型相同，把列车所有的换算闸瓦压力加起来，统一乘以该型闸瓦换算摩擦系数，即可求出列车制动力。 列车总制动力如果列车中制动摩擦材料是同一品种，摩擦系数都相同： 列车单位制动力计算公式： 常用制动系数P73换算制动率、某速度制动至某速度的列车制动力、常用制动计算参考P73 例3-4 列车制动力的二次换算法列车制动时多种摩擦材料并存，计算复杂，可以采用二次换算。二次换算系数列于P75 表3-8。 列车换算制动率取值 紧急制动换算制动率取全值；列车进站制动取全值的0.5；计算固定信号间的距离取全值的0.8 货物列车一般计算，在千分之20及以下的坡道，列车换算制动率可以不计入机车的闸瓦压力和重量，在专题计算中，应该包括进去。计算旅客列车，必须包括。 运营列车换算制动率的通用值 使用高磷闸瓦的货物列车标记载重50t以上换算制动率计算参考P77，根据以上分析，使用高磷闸瓦的货物列车换算制动率的通用值按列车管压力500kPa和600kPa分别取0.28和0.30 使用高摩闸瓦的货物列车计算参考P78，通用值按列车管压力500kPa和600kPa分别取0.18和0.20 使用新高摩闸瓦的货物列车计算参考P78,通用值按列车管压力500kPa和600kPa分别取0.16和0.18 使用新高摩闸瓦的行包快运货物列车，计算参考P78，通用值按列车管压力500kPa和600kPa分别取0。20和0.22 闸瓦制动的旅客列车，计算参考P78，通用值取0.58 盘形制动的旅客列车，计算参考P79，通用值取0.32 机车动力制动力和制动特性动力制动力包括机车的电阻制动、再生制动和液力制动等。Bd动力制动在高速时制动力随速度的降低增大、在低速时随着速度降低而减小，只能作为一种辅助制动，因为低速时动力制动的制动力随速度降低，列车在低速和停车时必须以靠闸瓦制动。 电阻制动特性机车电阻制动可以提高列车下坡时的限速，减少闸瓦磨损，在大长坡道运用保证安全可靠。 恒电流制动特性参考P80 恒励磁制动特性参考P80电阻制动特性曲线将恒电流、恒励磁制动特性曲线绘在同一坐标图重即为电阻制动特性曲线。 恒电流电阻制动特性曲线，当制动电阻一定，电阻制动力Bd于速度成反比。但在v一定时，电流越大，制动力越大。 恒励磁电阻制动特性曲线，当励磁磁通不变，机车电阻制动力Bd于速度v成正比。在机车速度不变的情况下，制动力于磁通量的平方成正比。 动力制动的限制 最大励磁电流限制 粘着限制 最大制动电流限制 牵引电机安全整流限制 机车最大速度限制 各型机车动力制动特性曲线通过专门试验得出。SS1型、SS4型和SS3型电力机车电阻制动曲线参考P82 动力制动力的取值常速下，动力制动与空气制动联合使用，不参与紧急制动。计算列车制动限速或者计算列车进站停车制动以及计算固定信号机距离时，不将动力制动计算在内。在计算小半径曲线众多的长大下坡区段的有关问题，取0.9的使用系数。 货物列车长大坡道利用动力制动控制速度在长大下坡道上，采用动力制动，制动力是否足够，能否在一定的速度下控制列车不增速，需要用下式判断： 计算参考P94]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>机车 列车牵引计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python图片至base64修改版加Python打包]]></title>
    <url>%2F2019%2F04%2F21%2FPython%E5%9B%BE%E7%89%87%E8%87%B3base64%E4%BF%AE%E6%94%B9%E7%89%88%E5%8A%A0Python%E6%89%93%E5%8C%85%2F</url>
    <content type="text"><![CDATA[之前写了一个图片转换成base64的小工具，这次markdown特化了一下，直接黏贴就好。123456789101112131415161718import base64import tkinter as tkfrom tkinter import filedialogimport win32clipboard as wimport win32conroot = tk.Tk() # 创建一个实例root.withdraw() # 隐藏窗口file_path = filedialog.askopenfilename() # 获取路径f = open(file_path, &apos;rb&apos;) # y以二进制形式打开ls_f = base64.b64encode(f.read()) # 读取文件，转换为64位编码f.close()new = b&apos;&lt;image src=&quot;data:image/png;base64,&apos;+ls_f+b&apos;&quot;/&gt;&apos; # 特化部分w.OpenClipboard()w.EmptyClipboard()w.SetClipboardData(win32con.CF_TEXT, new)w.CloseClipboard()print(ls_f) pyinstaller打包见下链接官方手册http://www.pyinstaller.org/]]></content>
      <categories>
        <category>python小工具</category>
      </categories>
      <tags>
        <tag>Python Pyinstaller</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列车牵引计算习题-第二章]]></title>
    <url>%2F2019%2F04%2F19%2F%E5%88%97%E8%BD%A6%E7%89%B5%E5%BC%95%E8%AE%A1%E7%AE%97%E4%B9%A0%E9%A2%98-%E7%AC%AC%E4%BA%8C%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[什么叫列车阻力？写出各种阻力的代表符号，并说明各个符号的意义和单位。列车于外界相互作用引起于列车运行方向相反、阻碍列车运行的、不能由司机控制的外力称为列车阻力。总阻力：W，作用在列车、车辆或者列车全部重量上的阻力，单位是kN。单位阻力:w，平均到机车、车辆或列车每kN重力上的阻力，单位是N/kN。 基本阻力由哪五部分组成？ 车轴轴承摩擦阻力。用滚动轴承代替滑动轴承，可以降低这一部分阻力。 轮轨间滑动摩擦阻力。 轮轨间滚动摩擦阻力。 冲击阻力。 气动阻力又称空气阻力。 货车运行单位基本阻力的试验公式为什么有空重之分？空车于重车的总重相差较大，单位基本阻力差别亦大，故空车和重车分别计算。 列车阻力如何分类？按阻力形成的原因分 基本阻力 附加阻力按阻力的作用范围分 总阻力 单位阻力 附加阻力有几种?如何计算？ 坡道附加阻力:列车单位坡道阻力在数值上等于坡道的千分数i。 曲线附加阻力:在圆曲线上运行的车辆，w=600/R。R为曲线半径。 隧道附加阻力: 在计算曲线阻力时，缓和曲线的长度如何处理？缓和曲线的曲率半径是一个变值，曲线阻力在600/R和0之间变化，简便的办法是将缓和曲线长度按减半计算，L=L-1/2(L1+L2)，可以折算为坡道阻力。 机车、车辆的启动基本阻力是如何规定的？只有在机车车辆起动时才存在的基本阻力，称列车起动基本阻力，用wq表示。据《牵规》： 电力机车和内燃机车的起动基本阻力w‘q取5N/kN 滚动轴承货车的单位起动基本阻力w‘’q取3.5N/kN 列车运行阻力如何计算？参考P58页例题 列车运行总全阻力计算(kN) 首先根据列车速度查P46表2-1得到此速度下的机车单位基本阻力w‘0，再查P47表2-2得到此速度下的滚动轴承货车单位基本阻力w‘’0。 带入列车运行总阻力公式 其中P为机车计算质量，查P26表1-4得到，G为货车计算质量，g为重力加速度，i是坡道千分数。列车运行单位全阻力计算(N/kN) 计算总基本阻力W0，为上书全阻力去掉坡道附加阻力，即去掉i乘项 计算单位基本阻力，w0=W0*103/((P+G)g) 单位全阻力:w=w0+ij 按机车、车辆试验公式，计算v=80km/h时的w‘0和w‘’0的值。 假设机车为SS1，公式为P45页2-2，带入速度80km/h，得到机车的运行单位基本阻力w‘0约为5.818 滚动轴承货车单位基本阻力为P47公式2-19，带入得到其运行单位基本阻力w‘’0为2.104 SS4型机车牵引G = 4000t的重货车(滚动轴承)，牵引运行时： 第一问12345678910111213141516171819202122import matplotlib.pyplot as pltimport numpy as np# 计算在不同i下的列车总阻力力给出速度关系曲线V = [20, 40, 60, 80]# i为0,2,4,6时F0 = [47.0, 57.8, 73.3, 103.1]F2 = [129.1, 139.9, 155.4, 185.2]F4 = [211.2, 222, 237.5, 267.3]F6 = [293.3, 304.1, 319.6, 349.4]plt.plot(V, F0, color=&apos;red&apos;, label=&apos;i=0&apos;)plt.plot(V, F2, color=&apos;black&apos;, label=&apos;i=2&apos;)plt.plot(V, F4, color=&apos;blue&apos;, label=&apos;i=4&apos;)plt.plot(V, F6, color=&apos;yellow&apos;, label=&apos;i=6&apos;)plt.xlim(15, 110)plt.xlabel(&apos;km/h&apos;)plt.ylabel(&apos;kN&apos;)plt.legend()plt.show() 第二问这里取P30页的最大牵引力数据作曲线 第三问可从图中估计出交点速度，在此级位上坡道上行驶速度应小于交点速度，否则牵引力小于阻力，可能会向后溜车，所以该点意义是坡道上行驶最大速度。 SS4型车牵引G=4000t的货物列车(滚动轴承)，问改列车在i=8的坡道上停车后是否能够再起动？SS4型车起动牵引力取速度等于0时的粘着牵引力。参考P25页例子Fq=Pg&mu;j=1000x184x9.81x(0.24+12/100)=649.8kNSS4型车在坡道上的起动全阻力，参考P58：得到474.7kN起动牵引力大于起动全阻力，所以可以再起动。]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>复习 列车牵引计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列车牵引计算习题-第一章]]></title>
    <url>%2F2019%2F04%2F19%2F%E5%88%97%E8%BD%A6%E7%89%B5%E5%BC%95%E8%AE%A1%E7%AE%97%E4%B9%A0%E9%A2%981%2F</url>
    <content type="text"><![CDATA[简述机车牵引力的定义及分类由传动装置产生、与列车运行方向相同、驱动列车运行并可由司机根据需要调节的外力。 分类按能量传递顺序分： 指示牵引力Fi:假定原动机所做的指示功毫无损失地传到动轮上所得到的机车牵引力。 轮周牵引力F:实际作用在实际作用在轮周上的机车牵引力。 车钩牵引力Fg:除去机车阻力的消耗，实际作用在机车车钩上的牵引力。按能量转换过程限制关系： 牵引电机牵引力:受牵引电机功率限制的轮周牵引力。 粘着牵引力:受轮轨间粘着能力限制的轮周牵引力。 什么是机车粘着牵引力轮周上的切线力大于轮轨间的粘着力时动轮就要发生空转，在不发生空转的前提条件下所能实现的最大轮周牵引力称为粘着牵引力。 电力机车牵引特性曲线有几种 牵引电动机的电流特性，机车速度提高时，牵引电机电流减少。 机车牵引力特性，磁通量一定时，牵引电机电流增大，机车牵引力增大。 机车牵引特性，运行速度增大，牵引力减少。 功率特性，速度越高，功率越大，在恒功区达到最大功率。 电力机车牵引特性曲线，将牵引电机牵引力和粘着牵引力与速度的关系绘制在一张图上。 机车牵引计算标准有哪些？各有什么含义 持续电流Ic，规定的持续电流，牵引电机按此电流工作散热平衡。 持续速度v，电力机车在最高位满磁场的牵引特性曲线上，有一个实现持续电流的速度。 持续牵引力Fc，持续速度对应的轮周牵引力。 计算速度vj及计算牵引力Fj，列车在限制坡道上的最低通过速度，计算牵引质量的依据，牵规规定了各型机车的最低计算速度及最大计算牵引力，他们分别是机车的持续速度和持续牵引力。计算时因不低于最低计算速度。 计算起动牵引力，在起动条件下机车所能发挥的最大牵引力，为了防止空转，电力机车按粘着条件选取机车起动牵引力。25页有例题。 SS4型机车如何确定计算速度？查表1-4可以确定最低计算速度为51.5km/h，计算速度应该不低于这个值。 机车牵引力的取值有哪些规定？多机牵引使用重联操作，每台机车牵引力均取全值；分别操作，第二台及以后的机车牵引力取0.98；补机操作，推送补机的牵引力取0.95。 最大牵引力取机车牵引特性的外包线。 牵引力使用系数进行最高负荷计算时，乘以牵引力使用系数0.9 SS4型机车不同速度下的牵引力如何确定？P14 图1-10，P30表1-7 哪些计算中需要使用牵引力使用系数？对各型机车，凡取用最高负荷各速度的牵引力计算列车最大合力、绘制最大合力线图或进行其他计算时。 电力机车的功率特性图有什么用途？直观、形象表示出轮周功率的大小和变换规律，以便对机车功率性能做出评价。 在轮周牵引力数据表中，选择你熟悉的一种货运机型，查出各速度下的最大牵引力，并乘以牵引力使用系数0.9，得出牵引计算中实际使用的最大牵引力Fy，绘制出机车使用牵引力Fy与速度的关系。使用P30 表1-7的SS4轮周牵引力数据表。123456789101112131415import matplotlib.pyplot as pltimport numpy as np# 最大牵引力计算，横坐标为速度，纵坐标为牵引力# 从启动到32级牵引特性曲线与粘着曲线的交点50km/h，按粘着限制线取粘着牵引力# 从50到51.5(最低计算速度)按32级特性曲线# 从51,5到73.2(持续电流限制交点按持续电流限制取线)# 大于73.2按32-3取V = np.array([0, 10, 20, 30, 40, 50, 51.5, 57, 63.6, 73.2, 80, 90, 100])F = np.array([649.8, 554.0, 517.0, 497.0, 484.8, 467.5, 431.6, 394.8, 353.8, 307.8, 242.5, 186.5, 159.9])Fy = np.dot(F, 0.9)print(Fy)# 最开始取粘着牵引力plt.plot(V, Fy)plt.show() 试计算SS4型电力机车v=0,10,20,30,40,50 km/h的粘着牵引力F&mu;并在计算纸上绘制成粘着牵引力曲线F&mu;.查表P261234567891011121314151617import matplotlib.pyplot as pltimport numpy as np# 粘着牵引力计算公式Fq = 1000Pu * g * Uj# 查表P26 SS4 P=2*92 g=9.81 u=0.24+12/(100+8v)def calcfun(v): return 1000*2*92*9.81*(0.24+12/(100+v))V = np.array([0, 10, 20, 30, 40, 50])F = []for c in V: F.append(calcfun(c))plt.plot(V, F)plt.show()]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>复习 列车牵引计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列车牵引计算3]]></title>
    <url>%2F2019%2F04%2F18%2F%E5%88%97%E8%BD%A6%E7%89%B5%E5%BC%95%E8%AE%A1%E7%AE%973%2F</url>
    <content type="text"><![CDATA[列车制动力定义由制动装置引起的、与列车运行方向相反的、司机可根据需要控制其大小的外力，称为制动力，用字母B表示。 产生制动力的方法 摩擦制动：通常指将空气通过机械传动装置传到闸瓦或闸片上，利用闸瓦与车轮踏面或者闸片与制动盘的摩擦产生制动力。 动力制动：以靠机车的动力机械通过传动装置产生的制动力，包括电阻制动、再生制动、电磁涡流制动、液力制动等。闸瓦制动原理在司机的操纵下，制动缸的空气压力通过基础制动装置，使闸瓦产生压力作用于滚动的车轮踏面，对车轮中心形成一个力矩，从而产生制动力。每一块闸瓦产生的制动力为：B=K*&phi;k闸瓦制动限制大小收到轮轨间粘着力的限制，如每轴作用在钢轨上的垂直载荷为q0、轮轨间的粘着系数为&mu;z，每轴上的闸瓦压力为&sum;K，则有：当制动力增大到轮轨粘着力时，车轮就会抱死滑行，制动力就变成了轮轨间的滑动摩檫力，滑行时，制动力较小，反而会延长滑行距离，擦伤车轮。下面分析滑动的情况： 速度v降低，&mu;j略微增大，&phi;k急剧增加，不等式右边减小，易发生滑行(快停车时)。 当轨面状况不好，粘着系数下降，不等式右边减小，易滑行。 紧急制动，K值增大，易滑行。 闸瓦摩擦系数&phi;k闸瓦压力K一定时，制动力取决于摩擦系数&phi;k，所以要求摩擦系数高且稳定。 闸瓦摩擦系数试验公式 闸瓦压力车辆每块闸瓦的实算闸瓦压力K: 盘型制动每块闸片的实算压力K’按下计算： 闸片压力K’作用在制动盘上，按照下面的公式进行换算，变成车轮踏面压力K: 各参数参考P65 制动率制动率是闸瓦压力与重力之比，每kN重力上所具有的闸瓦压力。 轴制动率：设计中检验有无滑行的重要依据。 列车制动率：表示列车所具有的制动能力。 列车制动力计算的实算法不同类型的车，闸瓦压力各不相同，摩擦系数也不同，需要分别计算然后求和。 列车单位制动力：b=（1000xB)/((P+G)xg) (N/kN)具体参考P67页例题 换算摩擦系数为了简化计算在进行摩擦系数计算时取K=25kN，带入P64页公式。高摩合成闸瓦取K=20kN，有： 对于盘形制动合成闸片，K’=20kN： 具体数值可查P69表]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>work 基础知识 第三章</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列车牵引计算2]]></title>
    <url>%2F2019%2F04%2F18%2F%E5%88%97%E8%BD%A6%E7%89%B5%E5%BC%95%E8%AE%A1%E7%AE%972%2F</url>
    <content type="text"><![CDATA[列车阻力列车与外界相互作用引起与列车运行方向相反、阻碍列车运行的、不能由司机控制的外力称为列车阻力。 列车阻力的分类按阻力形成的原因分 基本阻力：是列车在任何运行情况下都存在的阻力。在平直道上只有基本阻力。 附加阻力：列车在个别情况下才遇到的阻力。坡道附加阻力、曲线附加阻力、隧道附加阻力。两个相加为全阻力。按阻力作用的范围分 总阻力：作用在机车、车辆或列车全部重量上的阻力，分别为机车、车辆或者列车总阻力，用W表示，单位为kN。 单位阻力：平均到机车、车辆或者列车每kN重力上的阻力，用w表示，单位为N/kN。w=W*103/((P+G)g)P—-机车计算质量，tG—-牵引质量,t 基本阻力上述引起基本阻力的各种因素所占比例随着列车速度的高低有所变化。起动时几乎没有气动阻力，以轴承的摩擦阻力和轮轨间的滚动摩擦阻力为主，因而滚动轴承的车辆起动要容易得多。低速运行时，轴承的摩擦阻力占较大的比例；速度提高后，轮轨间的滑动摩擦阻力、冲击 振动和气动阻力的比重逐渐加大；高速运行时，基本阻力则以气动阻力为主，因此高速列车的外形流线化就显得特别重要。查公式计算。 电力机车和内燃机车的单位启动阻力W’q取5N/kN。 滚动轴承货车的单位启动基本阻力W’’q取3.5N/kN。 附加阻力坡道附加阻力上坡时除了基本阻力外，还有坡道附加阻力，是重力的分量。坡度千分数：千分数为5的坡道，表示每前进1000m的距离升高5m的上坡道。等于单位坡道阻力。 曲线附加阻力机车车辆在曲线上运行时的阻力大于同样条件下直线上运行时的阻力，其增大部分叫曲线附加阻力，简称曲线阻力。 隧道附加阻力列车进入隧道时，使隧道内产生阻塞现象。列车在隧道内启动没有隧道附加阻力。 加算坡道阻力和加算坡度千分数当上述三种阻力都存在时，曲线和隧道的单位附加阻力可以和单位坡道阻力合在一起计算，称为单位加算坡道阻力wj。单位坡道阻力，值为坡度千分数i；单位曲线阻力，按经验公式计算，wr=600/R；单位隧道阻力，尚未正式实验公布。 加算坡道阻力计算中对列车长度的考虑在手工计算中可以不考虑，把列车看成没有长度的一个质点。考虑列车长度对附加阻力的影响是一个非常复杂的问题，在后期的牵引电算软件中，把列车简化为质点间无相对运动的多质点模型。 道路纵断面的化简铁路线路由不同长度和坡度的坡道、不同半径的曲线以及不同长度的隧道组合而成。 用一个假想的化简千分数ih代替几个相邻的坡度近似的实际坡度千分数i。 把化简坡道长度lh范围内的曲线阻力和隧道阻力平均到化简坡度的全长上。列车阻力计算参考58页]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>work 基础知识 第二章</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[列车牵引计算1]]></title>
    <url>%2F2019%2F04%2F18%2F%E5%88%97%E8%BD%A6%E7%89%B5%E5%BC%95%E8%AE%A1%E7%AE%97%2F</url>
    <content type="text"><![CDATA[机车牵引力机车牵引力是由动力传动装置产生的、与列车运行方向相同、驱动列车运行并可由司机根据需要调节的外力。 按照不同条件可以吧机车牵引力作如下分类。按能量传递顺序的分类 指示牵引力Fi:假定原动机（内燃牵引时就是柴油机）所做的指示功毫无损失地传到 动轮上所得到的机车牵引力。指示牵引力是个假想的概念。 轮周牵引力F:实际作用在轮周上的机车牵引力，F小于Fi 车钩牵引力Fg:除去机车阻力的损耗，实际作用在机车车钩上的牵引力。在列车作等速运行时，有：Fg=F-W’,W’为机车阻力。我国《牵规》规定，机车牵引力以轮周牵引力为计算标准，即以轮周牵引力来衡量和表示机车牵引力的大小。由于动轮直径的变化会影响轮周牵引力的大小，《牵规》规定，机车牵引力按轮箍半磨耗状态计算。不论是设计还是试验资料，所提供的轮周牵引力和机车速度数据，必须换算到轮箍半磨耗状态。机车轮箍半磨耗状态的动轮直径叫做计算动轮直径。我国常速电力机车的动轮直径原形是1250mm,计算动轮直径是1200mm；常速内燃机车的动轮直径原形是1050mm计算动轮直径是1030mm。动力分散式动车组的动轮直径与客车轮径相同，即915mm，计算动轮直径是880mm。 按能量转换过程限制关系分类电力机车能量转换：电力机车的电能由变电所供给，进入机车的单相交流电经过变压整流后供给给牵引电动机，将电能转变为带动轮对转动的机械功，然后借助于轮轨间的粘着转变为动轮周上的牵引力所做的机械功，因而电力机车牵引力受到牵引电动机和轮轨间的粘着这两个变能部分工作能力的限制。对应这些限制，机车的牵引力可分为： 牵引电机牵引力：受牵引电机功率限制的轮周牵引力。 粘着牵引力：受轮轨间粘着能力限制的轮周牵引力。机车粘着牵引力轮周上的切线力F大于轮轨间的粘着力时动轮就要发生空转。在不空转的前提下所能实现的最大轮周牵引力称为粘着牵引力：F&mu;=P&mu;g&mu;j（kN）P&mu;—-机车计算粘着质量，t。&mu;j—-计算粘着系数。g—–重力加速度，g取9.81m/s2。F&mu;—-计算粘着牵引力。 P&mu;计算粘着系数 国产各型电力机车：&mu;j=0.24+12/(100+8V) 6K型电力机车：&mu;j=0.189+8.86/(44+V) 8G型电力机车：&mu;j=0.28+4/(50+6V)-0.0006v其中V—-运行速度，km/h。机车在曲线运行时需要修正系数，三轴转向架电力机车在曲线半径R小于600m的线路上运行时：&mu;r=&mu;g（0.67+0.00055R） 机车粘着牵引力是机车牵引力的一个限制值，在不同条件下取和牵引电机牵引力的小值 电力机车牵引力及牵引特性电流特性牵引电动机的电流特性，指在一定的电压下牵引电机电流和运行速度v的关系。牵引电动机电压平衡方程：Ud-Cen&phi;=IdRdUd—-牵引电动机端电压，VCe—-牵引电动机电势常数n—-牵引电动机转速，r/min&phi;—-牵引电动机主磁通，WbId—-牵引电动机电流，ARd—-牵引电动机电枢绕阻电阻，&Omega;得出Id=(Ud-Cen&amp;phi)/Rd牵引电机转速n与机车速度v成正比：n=1000&mu;cv/60&pi;D&mu;c—-齿轮传动比v—-机车速度，km/hD—-机车动轮直径，m带入后令C=Ce1000&mu;c/60&pi;D得到Id=(Ud-Cv&phi;)/RdUd用手柄级位决定，当手柄级位一定时，(恒压状态)机车速度提高，牵引电机电流减少。 机车牵引力特性指机车牵引力F与牵引电机电流Id的关系。与牵引电机电流Id以及磁通量&phi;成正比。 机车牵引特性机车牵引特性是指机车轮周牵引力F与运行速度V之前的关系，当手柄位级一定时，机车速度提高，机车牵引力减少。 电力机车牵引特性曲线将牵引电机牵引力和粘着牵引力与速度的关系绘在一张图上，构成电力机车牵引特性曲线。 机车牵引力的计算标准和取值规定计算标准 持续电流Ic、持续速度v0,持续牵引力Fc。规定的持续电流，牵引电机按此电流工作，热量与散热平衡。 计算速度Vj及计算牵引力Fj。《牵规》规定了各机车的最低计算速度和最大牵引力。 计算启动牵引力是在启动条件下，机车所能发挥的最大牵引力，为了防止空转，电力机车多按粘着条件选取机车启动牵引力。多机牵引时牵引力取值规定 使用重联线操作时，因操作动作协调，每台机车牵引力取全值。 分别操作时，第二台及以后的机车取全值的0.98. 补机与头部不易同步操作，推送补机的牵引力取0.95。最大牵引力取值和牵引力使用系数 最大牵引力看电力机车牵引特性的外包线。 牵引力使用系数，为了避免长时间朝负荷运转，实际使用的最大牵引力应乘以0.9。 机车功率特性机车功率代表机车做功能力的大小。 机车轮周功率N—-机车轮周上发挥的功率 机车标称功率Nb—-机车牵引电机输出功率 机车轮周功率机车轮周功率按下式计算 N=Fv/3.6(kW)式中 F—-机车轮周牵引力kN v—-机车运行速度km/h见表1-26第35页当电车启动时，速度近于0，所以功率近似为0，电网的压力很大，所以从网上取的电流很小。实际情况是在恒功率速度范围内满负载运行时，机车能耗最大。 动车组发展通常的电力机车动力装置都集中安排在机车上，后面挂着许多没有动力的车厢。动车组是一种带有可操控力的固定编组的列车组，带动力的叫动车，不带的叫拖车。其结构特征:车组内包含可操控的动力车和各种功能的车辆，按固定编组运营，运用不能解编，往返不需换头。 动车组牵引动力方式 动力集中：动力集中式的头尾为带司机室的动力车，中部为供旅客乘坐的拖车， 动力分散：动力分散式动车组的头车、尾车和中部的全部或者部分车辆带有动力，或部分转向架带有动力。各自优点 动力分散电动车组的优点是：动力装置分布在列车不同的位置上，能够实现较大的牵引力，编组灵活。由于采用动力制动的轮对多，制动效率高，且调速性能好，制动减速度大，适合用于限速区段较多的线路。另外，列车中一节动车的牵引动力发生故障对全列车的牵引指标影响不大。缺点是：牵引力设备的数量多，总质量大。 动力集中的电动车组也有其优点：动力装置集中安装在2-3节车上，检查维修比较方便，电气设备的总重量小于动力分散的电动车组。缺点是动车的轴重较大，对线路不利。]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>work 基础知识 第一章</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HXD1机车说明]]></title>
    <url>%2F2019%2F04%2F17%2FHXD1%E6%9C%BA%E8%BD%A6%E8%AF%B4%E6%98%8E%2F</url>
    <content type="text"><![CDATA[7200KW机车是六轴机车，轴式为 Co’ - Co’ 轴式所谓轴列式就是一台机车转向架的数目和每台转向架上车轴的数量。其中：A-一根动轴 B-每台转向架上2根轴 C-每台转向架上3根轴；转向架的数量用“-”来表示；“0”表示该车轴上装有牵引电机；固定重联机车（一般都是每组机车有2台）为(轴数-轴数)+(轴数-轴数)或者2（轴数-轴数）比如：东风4B型，韶山1型等等机车：每台机车2台转向架，每台转向架上有3根车轴，每根车轴上都装有牵引电机，所以它的轴式就是C0-C0；韶山4/4改型，东风10型等固定重联机车每台机车2台转向架，每台转向架上有2根车轴，每根车轴上都装有牵引电机，每个车组由两台机车组成，所以它的轴式就是(B0-B0)+(B0-B0)或者2（B0-B0）；北京型，东方红型等液力传动内燃机车每台机车2台转向架，每台转向架上有2根车轴，但是液力传动机车动轴不是由牵引电机驱动的因此动轴上并没有安装牵引电机，因此它的轴式是B-B;6K型，韶山7型等电力机车每台机车3台转向架，每台转向架上有2根车轴，每根车轴上都装有牵引电机，所以它的轴式就是B0-B0-B0；韶山3B，东风11G等固定重联机车每台机车2台转向架，每台转向架上有3根车轴，每根车轴上都装有牵引电机，每个车组由两台机车组成，所以它的轴式就是(C0-C0)+(C0-C0)或者2（C0-C0）；北京型固定重联机车每台机车2台转向架，每台转向架上有2根车轴，每个车组由两台机车组成，但是液力传动机车动轴不是由牵引电机驱动的因此动轴上并没有安装牵引电机，所以它的轴式就是(B-B)+(B-B)或者2（B-B）；东风4CK型内燃机车：每台机车2台转向架，每台转向架上有3根车轴，但是每台转向架的中间轴没有安装牵引电机只是从动轴，因此它的轴式就是A1A-A1A；]]></content>
      <categories>
        <category>机车常识</category>
      </categories>
      <tags>
        <tag>HXD1 机车</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HXD1机车1]]></title>
    <url>%2F2019%2F04%2F17%2FHXD1%E6%9C%BA%E8%BD%A61%2F</url>
    <content type="text"><![CDATA[机车启动机车外部检查 机车必须静止，确认没有任何人在车上工作。 肉眼检查机车外部可能存在的损坏。 检查所有重联机车是否机械、电气、气动连接。 检查砂箱是否加满、盖子是否盖上。 砂箱内的砂子不得少于砂箱的 50％。如果砂子少于 50％，砂箱必须由维护人员加满。 检查外部电源和所有连接电缆是否拆除。 施加停放制动且移开铁鞋。 检查进风口和出风口的清洁情况。 检查机车顶部上是否有电网。 机械间准备 通过司机室台上的机械间灯开关点亮机械间灯。 闭合低压柜所有小自动开关。 低压柜上的控制开关必须在根据机车状态的位置设置。在正常情况下，所有控制开关的位置必须在竖直位。 闭合控制电源柜所有小自动开关。 列车编组中所有的蓄电池都需要单独闭合。 在关断机车蓄电池且等待 10 秒后，才允许重新闭合蓄电池。 通过闭合所有的蓄电池系统，控制系统的一部分同时得电。（CCU1、 CCU2、 TCU1、TCU2、 CIO1、CIO2、 机械间 MIO、 制动控制单元、显示器) 当蓄电池电压可用时，直流/直流逆变器（用于低压电源）闭合。 检查蓄电池表（控制电源柜位置 3 监控单元模块）。工作电压必须不低于 77V。 选择受电弓。 打开总风缸上的截止阀 A10. 运用过程 检查空气管路柜上钥匙阀 B01.99 上钥匙是否在正常位（竖直位）。]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>HXD1 操作手册</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LKJ2000说明]]></title>
    <url>%2F2019%2F04%2F16%2FLKJ2000%2F</url>
    <content type="text"><![CDATA[以上为LKJ2000界面上方依次为机车信号灯显示窗口：显示机车当前接收的信号状态（信号灯）速度等级显示窗口：从上至下LC、SD3、SD2、SD1四种速度等级当前速度窗口：机车当前实际运行速度，绿色限制速度窗口：机车当前的允许运行速度，红色距前方信号机距离窗口：列车距前方信号机的距离，黄色信号机类型窗口：显示前方信号机的编号和信号机的种类里程窗口：机车当前的公务里程日期和时间窗口 右侧为系统状态指示灯，自上而下依次为故障：系统与所有单元通信中断时，此灯点亮降级：装置处于降级工作状态时，此灯点亮(监控运行状态和调车状态以外的其它运行状态，叫做监控装置的降级运行状态，2000型面板“降级”指示灯亮表示进入该状态。进入降级运行状态的条件：1、设定参数未按开车键。2、关机30再开。3、监控数据用完。4、故障自启动。)紧急：装置发出紧急制动指令时，此灯亮，停车后灭常用：装置发出常用制动指令时，此灯亮，缓解操作成功后灭。卸载：装置发出卸载动作指令时，此灯亮，满足加载条件后灭。解锁：解除停车控制成功后，此灯亮，4s后灯灭。开车：列车运行参数有效设定完毕后灯亮，按压【开车】键响应后灯灭。调车：处于调车状态时灯亮，退出灯灭。有权：显示有权时本端显示器有操作权，显示无权时本端显示器无操作权，客货/巡检：设定完毕后显示当前的客货状态，显示客本，装置处于客车本务状态，显示货本，装置处于货车本务状态。显示客补，装置处于客车非本务状态，显示货补时，装置处于货车非本务状态。]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>work LKJ2000</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C#从入门到放弃？1]]></title>
    <url>%2F2019%2F04%2F16%2FC%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83%2F</url>
    <content type="text"><![CDATA[C#控制台程序生成exe控制台程序在C#中默认生成dll，运行方式： 进入dll目录，输入start donet xxx.dll 添加代码 &lt;RuntimeIdentifier&gt;win10-x64&lt;/RuntimeIdentifier&gt;1234567891011121314&lt;Project Sdk=&quot;Microsoft.NET.Sdk&quot;&gt; &lt;PropertyGroup&gt; &lt;OutputType&gt;Exe&lt;/OutputType&gt; &lt;TargetFramework&gt;netcoreapp2.1&lt;/TargetFramework&gt; &lt;RuntimeIdentifier&gt;win10-x64&lt;/RuntimeIdentifier&gt; &lt;RootNamespace&gt;hello_C&lt;/RootNamespace&gt; &lt;/PropertyGroup&gt; &lt;PropertyGroup Condition=&quot;&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|AnyCPU&apos;&quot;&gt; &lt;WarningLevel&gt;2&lt;/WarningLevel&gt; &lt;/PropertyGroup&gt;&lt;/Project&gt; C#图形应用创建项目选择WPF应用程序，出现设计窗口和逻辑窗口，分别为xaml文件与xaml.cs文件xaml(Extensible Application Markup Language，可扩展应用程序标记语言) C#语法关键字如下1abstract do in protected true as double int public try base else interface readonly typeof bool enum internal ref uint break event is return ulong byte explicit lock sbyte unchecked case extern long sealed unsafe catch false namespace short ushort char finally new sizeof using checked fixed null stackalloc virtual class float object static void const for operator string volatile continue foreach out struct while decimal goto override switch default if params this delegate implicit private throw 标识符如下1dynamic join set from let value get orderby var group partial where into select yield 命名建议驼峰命名 变量decimal 货币值 比double有更高的精度和更小的范围 128位 赋值未在声明时赋值的变量在C#中不可使用]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>入门 HelloC#</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[机车系统常识、]]></title>
    <url>%2F2019%2F04%2F15%2F%E6%9C%BA%E8%BD%A6%E7%B3%BB%E7%BB%9F%E5%B8%B8%E8%AF%86%E3%80%81%2F</url>
    <content type="text"><![CDATA[缩写 详细信息 BCU Brake Control Unit制动控制单元 CCU Central Control Unit中央控制单元 CIR 机车综合无线通信设备 DDU Driver Display Unit司机显示单元 DMI Driver Machine Interface人机交互单元 EOT End of Trail列尾 ESD Electronic Short Distance电气短距离 LKJ 列车运行监控装置，LKJ-2000本公司 MTBF Mean Time Between Failures平均故障间隔时间 MVB Multifunction Vehicle Bus多功能车辆总线 RAMS Reliability, Availability, Maintainability and Safety SIL Safety Integrity Level安全完整性等级 TCU Traction Control Unit传动控制单元 纵断面160\1 路长160坡度1% 贯通实验规定列车开车后，需要做贯通实验。目的：确认列车管处于贯通状态。步骤：司机操作机车减压，核对车位风压。意义：检查主管路是否泄漏，如果漏风，会意外制动，如果阻塞，则无法制动。 过分相铁路上的电网不是由一个供电所提供的，两个供电所之间电流的相位不一定相同，所以在连接两个供电所电网之间是一段没有电的，这一段电网为分相。把机车通过这一段陈为过分相。]]></content>
      <categories>
        <category>机车知识</category>
      </categories>
      <tags>
        <tag>work 机车</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于base64编码的markdown图片插入]]></title>
    <url>%2F2019%2F04%2F14%2F%E5%9F%BA%E4%BA%8Ebase64%E7%BC%96%E7%A0%81%E7%9A%84markdown%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%2F</url>
    <content type="text"><![CDATA[以上是html通过base64贴出的图，使用markdown贴的图如果太大似乎无法显示,压缩至1k左右可以显示，但是太糊，于HTML上不压缩也可显示，不知道是不是markdown的限制,于是采用html语言进行图片插入]]></content>
      <categories>
        <category>base64</category>
      </categories>
      <tags>
        <tag>markdown bse64</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python将图片转换为base64编码]]></title>
    <url>%2F2019%2F04%2F13%2FPython%E5%B0%86%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%BAbase64%E7%BC%96%E7%A0%81%2F</url>
    <content type="text"><![CDATA[markdown插入图片可以采用base64的方式，写一个小工具可以方便使用 获取文件路径获取文件的路径选择了图形界面，比之命令行更好操作 TkinterTkinter 是使用 python 进行窗口视窗设计的模块.简单的构造, 多平台, 多系统的兼容性, 选择它作为文件选取.12345import tkinter as tkfrom tkinter import filedialogroot = tk.Tk()root.withdraw()file_path = filedialog.askopenfilename() base64在Markdown下插入图片共有3种方式： 插入本地图片 插入网络图片 将图片存入Markdown Base64编码可用于在HTTP环境下传递较长的标识信息，是一种用64个字符来表示任意二进制数据的方法。用记事本打开exe、jpg、pdf这些文件时，我们都会看到一大堆乱码，因为二进制文件包含很多无法显示和打印的字符，所以，如果要让记事本这样的文本处理软件能处理二进制数据，就需要一个二进制到字符串的转换方法。Base64是一种最常见的二进制编码方法。 python实现12345import base64f=open(&apos;723.png&apos;,&apos;rb&apos;) #二进制方式打开图文件ls_f=base64.b64encode(f.read()) #读取文件内容，转换为base64编码f.close()print(ls_f) 复制到剪贴板直接copy岂不快哉?1234567import win32clipboard as wimport win32condef setText(aString): # 写入剪切板 w.OpenClipboard() w.EmptyClipboard() w.SetClipboardData(win32con.CF_TEXT, aString) w.CloseClipboard() 完整工具12345678910111213141516import base64import tkinter as tkfrom tkinter import filedialogimport win32clipboard as wimport win32conroot = tk.Tk() # 创建一个实例root.withdraw() # 隐藏窗口file_path = filedialog.askopenfilename() # 获取路径f = open(file_path, &apos;rb&apos;) # y以二进制形式打开ls_f = base64.b64encode(f.read()) # 读取文件，转换为64位编码f.close()w.OpenClipboard()w.EmptyClipboard()w.SetClipboardData(win32con.CF_TEXT, ls_f)w.CloseClipboard() 最后使用pyinstaller打包，明天试试好不好用]]></content>
      <categories>
        <category>python小工具</category>
      </categories>
      <tags>
        <tag>python 图像 base64</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[http之一]]></title>
    <url>%2F2019%2F04%2F12%2F%E5%9B%BE%E8%A7%A3http1%2F</url>
    <content type="text"><![CDATA[之前陆陆续续学了一些关于http的知识，现在准备系统看一下。 http方法 方法 说明 支持的http版本 GET 获取资源 1.0/1.1 POST 传输实体主题 1.0/1.1 PUT 传输文件 1.0/1.1 HEAD 获得首部 1.0/1.1 DELETE 删除文件 1.0/1.1 OPTIONS 询问服务器支持的方法 1.1 TRACE 追踪路径 1.1 CONNECT 隧道协议代理 1.1 LINK 建立和资源之间的联系 1.0 UNLINK 断开连接关系 1.0 http长连接由于短链接状态下，每次请求资源都会进行tcp的握手和挥手，当前的页面上一般会包含很多资源，使用短连接将会大大增加开销。长连接：在双方没有明确提出断开连接的情况下，保持连接。（http1.1默认长连接） CookieCookie意为“甜饼”，是由W3C组织提出，最早由Netscape社区发展的一种机制。目前Cookie已经成为标准，所有的主流浏览器如IE、Netscape、Firefox、Opera等都支持Cookie。 由于HTTP是一种无状态的协议，服务器单从网络连接上无从知道客户身份。怎么办呢？就给客户端们颁发一个通行证吧，每人一个，无论谁访问都必须携带自己通行证。这样服务器就能从通行证上确认客户身份了。这就是Cookie的工作原理。 Cookie实际上是一小段的文本信息。客户端请求服务器，如果服务器需要记录该用户状态，就使用response向客户端浏览器颁发一个Cookie。客户端浏览器会把Cookie保存起来。当浏览器再请求该网站时，浏览器把请求的网址连同该Cookie一同提交给服务器。服务器检查该Cookie，以此来辨认用户状态。服务器还可以根据需要修改Cookie的内容。 请求报文(不包含Cookie)123GET /reader/ HTTP/ 1.1 Host: hackr.jp *首部字段内没有Cookie的相关信息 响应报文(服务器端生成Cookies)12345HTTP/ 1.1 200 OK Date: Thu, 12 Jul 2012 07: 12: 20 GMT Server: Apache ＜ Set-Cookie: sid = 1342077140226724; path =/; expires = Wed, 10-Oct-12 07: 12: 20 GMT ＞ Content-Type: text/ plain; charset = UTF-8 请求报文(自动发送保存的Cookies)123GET /image/ HTTP/ 1.1 Host: hackr.jp Cookie: sid = 1342077140226724]]></content>
      <categories>
        <category>读书笔记《图解http》</category>
      </categories>
      <tags>
        <tag>web http</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[这是搭建完自动生成的文档，就不删除了Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
